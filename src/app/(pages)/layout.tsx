"use client";
import "../globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { Providers } from "./providers";
import { useContext, useEffect } from "react";
import { AppContext } from "@/appProvider";
import Head from "next/head";
import { cssImports, templateConfig } from "@/templates/config/index";
import { PlaceholderLayout } from "../components/PlaceholderLayout/PlaceholderLayout";
import { SitesField, ThemeName } from "@/appProvider/types";
import { NoSite } from "../components/NoSite/NOSite";
// import "../../assets/css/demo13.min.css";

const inter = Inter({ subsets: ["latin"] });

const DynamicComponent = ({
     component,
     props,
}: {
     component: React.ComponentType<any> | string;
     props: any;
}) => {
     const Component = component;
     return <Component {...props} />;
};

// export const metadata: Metadata = {
//      title: "Create Next App",
//      description: "Generated by create next app",
// };

export default function RootLayout({ children }: { children: React.ReactNode }) {
     const { site, loading } = useContext<{ site: SitesField; loading: boolean }>(AppContext);

     useEffect(() => {
          if (site) {
               cssImports[site.theme.theme as ThemeName];
          }
     }, [site]);

     if (!site && loading) {
          return <PlaceholderLayout />;
     } else if (!site && !loading) {
          return <NoSite />;
     }

     console.log("site", site);

     const defualtTemplate = templateConfig[site.theme.theme];
     const Header = defualtTemplate["header"];
     const Footer = defualtTemplate["footer"];

     return (
          <html lang="en">
               <Head>
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
               </Head>
               <body className={"homepage"}>
                    <Header
                         props={{
                              ...site.theme.header.component.props,
                              company: site.company,
                         }}
                    />
                    {children}
                    <Footer props={{ ...site.theme.footer.component.props }} />
               </body>
          </html>
     );
}
